
package {{go_package}}

{% if go_imports|length > 0 or go_private_imports|length > 0 %}
import (
{% for pkg in go_imports %}
	"{{pkg}}"
{% endfor %}{# pkg in go_imports #}
{% for pkg in go_private_imports %}
	"{{pkg}}"
{% endfor %}{# pkg in go_private_imports #}
)
{% endif %}{# len(go_imports) > 0 or len(go_private_imports) > 0 #}

{%- set interfacename = name | capfirst + "Interface" %}

type {{interfacename}} interface {
{% for m in methods %}
{% if m.is_request %}
{% if not m.async %} 
	{{m.name}}(remote nfrpc.RemoteNubInfo, arg *{{m.arg|protoname}}, res *{{m.res|protoname}})
{% else %}
	// You need to call reply_{{m.name.lower()}}(remote, replyid, res) after finished.
	{{m.name}}(remote RemoteNubInfo, replyid nfrpc.ReplyID, arg *{{go_proto_package}}.{{m.arg}})
{% endif %}{# not m.async #}
{% else %}
	{{m.name}}(remote nfrpc.RemoteNubInfo, arg *{{m.arg|protoname}})
{% endif %}{# m.is_request #}
{% endfor %}{# m in methods #}

	Handle{{name|capfirst}}UnknownBubble(remote nfrpc.RemoteNubInfo, msgid nfrpc.MethodID, data bytes.Bytes)
	Handle{{name|capfirst}}BadBubble(remote nfrpc.RemoteNubInfo, msgid nfrpc.MethodID, data *binary)
};
